import {IForEach} from "./IForEach";
/**
 * Объект IList предназначен для хранения набора именованных элементов.
 */
export interface IList extends IForEach{
    /**
     * Имя элемента списка с указанным индексом.
     *
     * @param index индекс элемента в списке.
     */
    Names(index: number): string;
    /**
     * Значение элемента списка с указанным индексом.
     *
     * @param index индекс элемента в списке.
     */
    Values(index: number): any;
    /**
     * Метод добавляет в конец списка новый элемент.
     *
     * @param name имя элемента
     * @param value значение элемента
     */
    Add(name: string, value: any);
    /**
     * Метод удаляет все элементы списка. При этом значение свойства Count становится равным нулю.
     */
    Clear(): void;
    /**
     * Метод удаляет элемент с указанным индексом.
     *
     * @param index индекс элемента
     */
    Delete(index: number): void;
    /**
     * Метод возвращает значение первого элемента в списке, имя которого совпадает с параметром Name.
     *
     * @param name имя искомого элемента
     */
    FindItem(name: string): any;
    /**
     * Метод возвращает индекс первого элемента в списке, значение которого совпадает со значением параметра Value.
     *
     * @param value значение искомого элемента
     */
    IndexOf(value: any): number;
    /**
     * Метод возвращает индекс первого элемента в списке, имя которого совпадает со значением параметра Name.
     * 
     * @param name имя искомого элемента
     */
    IndexOfName(name: string): number;
    /**
     * Метод добавляет в список новый элемент.
     *
     * @param index индекс элемента;
     * @param name имя элемента;
     * @param value значение элемента.
     */
    Insert(index: number, name: string, value: any): void;
    /**
     * Метод возвращает значение элемента с именем Name и удаляет элемент из списка.
     *
     * @param name имя элемента.
     */
    PopVar(name: string): any;
    /**
     * Метод устанавливает значение элемента с именем Name в Value.
     *
     * @param name имя элемента;
     * @param value значение элемента.
     */
    SetVar(name: string, value: any): void;
    /**
     * Метод возвращает значение первого в списке элемента, имя которого совпадает со значением параметра Name.
     *
     * @param name имя искомого элемента.
     */
    ValueByName(name: string): any;
}