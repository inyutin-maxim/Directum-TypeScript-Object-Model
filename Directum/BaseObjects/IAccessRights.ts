import {IUserList} from "../AuxiliaryObjects/IUserList";
import {IUser} from "../AuxiliaryObjects/IUser";
/**
 * Объект IAccessRights предназначен для проверки прав доступа пользователей к объекту ЭДО.
 */
export interface IAccessRights {
    /**
     * Свойство возвращает признак наличия у пользователя прав на администрирование объекта.
     */
    readonly CanAdministrate: boolean;
    /**
     * Свойство возвращает признак наличия полных прав на объект:
     * True, если у текущего пользователя есть полные права на объект, иначе False.
     */
    readonly CanManage: boolean;
    /**
     * Свойство возвращает признак наличия прав на изменение объекта:
     * True, если у текущего пользователя есть права на изменение объекта, иначе False.
     */
    readonly CanModify: boolean;
    /**
     * Свойство возвращает признак наличия прав на просмотр:
     * True, если у текущего пользователя есть права на просмотр объекта, иначе False.
     */
    readonly CanRead: boolean;
    /**
     * Свойство возвращает список пользователей и групп, указанных в списке прав доступа на объект с типом прав «Полный».
     */
    readonly Managers: IUserList;
    /**
     * Свойство возвращает список пользователей и групп, указанных в списке прав доступа на объект с типом прав «Просмотр»
     */
    readonly Readers: IUserList;
    /**
     * Свойство возвращает список пользователей и групп, указанных в списке прав доступа объекта с типом прав «Изменение»
     */
    readonly Writers: IUserList;

    /**
     * Метод проверяет права текущего пользователя на администрирование.
     */
    CheckAdministrate(): void;
    /**
     * Метод проверяет наличие у текущего пользователя полных прав на объект с учетом замещения и вхождения в группы.
     */
    CheckManage(): void;
    /**
     * Метод проверяет права текущего пользователя на изменение объекта с учетом замещения и вхождения в группы.
     */
    CheckModify(): void;
    /**
     * Метод проверяет права текущего пользователя на просмотр объекта с учетом замещения и вхождения в группы.
     */
    CheckRead(): void;
    /**
     * Метод возвращает признак наличия у пользователя или группы UserOrGroup полных прав на объект.
     *
     * @param userOrGroup пользователь или группа
     */
    IsManager(userOrGroup: IUser): boolean;
    /**
     * Метод возвращает признак наличия у пользователя или группы UserOrGroup прав на просмотр объекта.
     *
     * @param userOrGroup пользователь или группа
     */
    IsReader(userOrGroup: IUser): boolean;
    /**
     * Метод возвращает признак наличия у пользователя или группы UserOrGroup прав на изменение объекта.
     *
     * @param userOrGroup пользователь или группа
     */
    IsWriter(userOrGroup: IUser): boolean;
    /**
     * Метод возвращает признак наличия у пользователя User полных прав на объект.
     *
     * @param user пользователь, для которого необходимо проверить права на объект
     */
    UserCanManage(user: IUser): boolean;
    /**
     * Метод возвращает признак наличия у пользователя User прав на просмотр объекта.
     *
     * @param user пользователь, для которого необходимо проверить права на объект
     */
    UserCanRead(user: IUser): boolean;
    /**
     * Метод возвращает признак наличия у пользователя User прав на изменение объекта.
     *
     * @param user пользователь, для которого необходимо проверить права на объект
     */
    UserCanWrite(user: IUser): boolean;
}