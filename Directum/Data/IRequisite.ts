import {IField} from "./IField";
import {IEventList} from "../References/IEventList";
import {TReqDataType} from "../Enums/TReqDataType";
import {IDataSet} from "./IDataSet";
import {TAlignment} from "../Enums/TAlignment";
/**
 * Объект IRequisite является базовым объектом для реквизитов всех типов.
 */
export interface IRequisite{
    /**
     * Свойство определяет каким образом выравниваются значения реквизита при отображении в связанных элементах управления.
     */
    Alignment:TAlignment;
    /**
     * Свойство предоставляет доступ к значению реквизита в виде даты.
     */
    AsDate:Date;
    /**
     * Свойство предоставляет доступ к значению реквизита в виде целого числа.
     */
    AsInteger:number;
    /**
     * Свойство предоставляет доступ к значению реквизита в виде числа.
     */
    AsNumeric:number;
    /**
     * Свойство предоставляет доступ к значению реквизита в виде строки.
     */
    AsString:string;
    /**
     * Свойство позволяет управлять возможностью визуального чтения значения реквизита.
     */
    CanGUIRead:boolean;
    /**
     * Свойство позволяет управлять возможностью визуальной записи значения в реквизит.
     */
    CanGUIWrite:boolean;
    /**
     * Свойство возвращает набор данных, к которому относится реквизит.
     */
    DataSet:IDataSet;
    /**
     * Свойство возвращает тип данных значения реквизита.
     */
    DataType:TReqDataType;
    /**
     * Свойство возвращает поле, в котором хранится отображаемое значение реквизита.
     */
    DisplayField:IField;
    /**
     * Свойство возвращает текст в соответствии с культурой отображения даты и времени, взятой из настроек операционной системы.
     */
    DisplayText:string;
    /**
     * Свойство предоставляет доступ к признаку доступности реквизита:
     * True, если значение реквизита доступно, False, если значение реквизита недоступно.
     */
    Enabled:boolean;
    /**
     * Свойство возвращает список событий реквизита.
     */
    Events:IEventList;
    /**
     * Свойство возвращает поле, в котором хранится значение реквизита.
     */
    Field:IField;
    /**
     * Свойство возвращает алиас, используемый в SQL-запросе для связанного с реквизитом поля.
     */
    FieldName:string;
    /**
     * Свойство возвращает признак того, что реквизит является дополнительным для справочника: True, если реквизит дополнительный, иначе False.
     */
    IsAttached:boolean;
    /**
     * Свойство предоставляет доступ к признаку скрытого реквизита: True, если реквизит скрыт, False, если реквизит не скрыт.
     */
    IsHidden:boolean;
    /**
     * Свойство возвращает признак пустого значения реквизита: True, если значение реквизита пустое, иначе False.
     */
    IsNull:boolean;
    /**
     * Свойство возвращает признак наличия несохраненных изменений в наборе данных: True, если изменения есть, иначе False.
     */
    Modified:boolean;
    /**
     * Свойство возвращает имя реквизита.
     */
    Name:string;
    /**
     * Свойство предоставляет доступ к признаку предварительно загружаемого реквизита:
     * True, если значение реквизита загружается при открытии набора данных, False, если не загружается.
     */
    Preloaded:boolean;
    /**
     *
     Свойство возвращает предыдущее значение реквизита.
     */
    PreviousValue:any;
    /**
     * Свойство позволяет управлять признаком обязательного заполнения реквизита:
     * True, если необходимо заполнять значения реквизита, False, если это не обязательно.
     */
    Required:boolean;
    /**
     * Свойство предоставляет доступ к признаку сохранения последнего введенного значения реквизита диалога:
     * True, если значение сохраняется, False, если значение не сохраняется.
     * Для реквизитов других объектов значение свойства игнорируется.
     */
    SaveLastValue:boolean;
    /**
     * Свойство возвращает имя поля в таблице базы данных, в котором содержится значение реквизита.
     */
    SQLFieldName:string;
    /**
     * Свойство возвращает флаг сохранения значения реквизита на сервере:
     * True, если значение реквизита хранится на сервере, False, если значение реквизита вычисляются на клиенте.
     */
    Stored:boolean;
    /**
     * Свойство возвращает заголовок реквизита.
     */
    Title:string;
    /**
     * Свойство предоставляет доступ к значению реквизита.
     */
    Value:any;
}